# version string format -- This will be overwritten later anyway
version: "{build}"

os:
  - Visual Studio 2015

init:
  - git config --global core.autocrlf input
  # Set build version to git commit-hash
  - ps: Update-AppveyorBuild -Version "$($env:APPVEYOR_REPO_BRANCH) - $($env:APPVEYOR_REPO_COMMIT)"

install:
  - cmd: ECHO "INSTALL OPENCV:"
  - choco upgrade chocolatey
  - choco install opencv #--version 2.4.13
  #- choco upgrade opencv

# This allows us to pass %PLATFORM% to CMake -A.
platform:
  - x64

#Cmake will autodetect the compiler, but we set the arch
before_build: 
  - IF EXIST c:\tools\opencv* CD c:\tools\opencv*
  - SET OPENCV_DIR=%CD%\build
  - echo Running cmake...
  - cd c:\pnp_demo
  # - cmd: IF EXIST C:\OpenCV* CD C:\OpenCV*
  # - cmd: SET OPENCV_ROOT_PATH=%CD%\opencv
  # - cmd: CD %APP_PATH%
  # - cmd: SET OPENCV_DIR=%OPENCV_ROOT_PATH%\build\%ARCH%\vc12\bin
  # - cmd: DIR %OPENCV_ROOT_PATH%\build\%ARCH%\vc12\bin
  # - cmd: DIR %OPENCV_ROOT_PATH%\build\%ARCH%\vc12\lib
  # Here we need to copy the opencv.pc file from the repo into PKG_CONFIG_PATH
  # trick part is to check for the vc12 folder and use that one
  #- cmd: SET PKG_CONFIG_PATH=C:\GTK\lib\pkgconfig
  #- cmd: copy pnp_demo/opencv_x64.pc C:\GTK\lib\pkgconfig\opencv.pc
  - cmake -H. -BBuild -A%PLATFORM%

# build with MSBuild
build:
  project: Build\pnp_demo.sln        # path to Visual Studio solution or project
  parallel: true                        # enable MSBuild parallel builds
  verbosity: normal                     # MSBuild verbosity level {quiet|minimal|normal|detailed}

test_script:
  - cd Build
